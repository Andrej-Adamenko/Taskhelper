name: Link commit to issue

on:
  push:
    branches:
      - 'feature/*'  # Trigger on any branch with the pattern 'feature/{issue_number}'

jobs:
  check-branch-commit:
    runs-on: ubuntu-latest
    outputs:
      EQUALS: ${{ steps.check.outputs.EQUALS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get branch number
        id: branch
        run: |
          branch_name=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          echo "BRANCH_ISSUE_NUMBER=$(echo $branch_name | sed -n 's/^feature\/\([0-9]\+\)$/\1/p')" >> $GITHUB_ENV

      - name: Get commit issue
        id: commit
        run: |
          commit_message=$(git log -1 --pretty=%B)
          echo "COMMIT_ISSUE_NUMBER=$(echo "$commit_message" | sed -n 's/^\s*feature\/\([0-9]\+\).*/\1/p')" >> $GITHUB_ENV

      - name: Check if branch and commit contain the same issue_number
        id: check
        if: env.BRANCH_ISSUE_NUMBER && env.COMMIT_ISSUE_NUMBER   # Ensure the issue number is found
        run: |
          branch_feature="${{ env.BRANCH_ISSUE_NUMBER }}"
          commit_feature="${{ env.COMMIT_ISSUE_NUMBER }}"

          if [[ "$branch_feature" == "$commit_feature" ]]; then
            echo "Branch and commit match: $branch_feature"
            echo "EQUALS=true" >> $GITHUB_OUTPUT
          else
            echo "Branch and commit don't match"
            echo "EQUALS=" >> $GITHUB_OUTPUT
            exit 1
          fi

  link-commit-to-issue:
    permissions:
      issues: write
    runs-on: ubuntu-latest
    needs: check-branch-commit
    if: needs.check-branch-commit.outputs.EQUALS == 'true'  # Only run if branch and commit is equals

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest commit details
        id: commit_details
        run: |
          # Get the latest commit hash and commit message
          commit_hash=$(git log -1 --pretty=format:'%H')
          commit_message=$(git log -1 --pretty=format:'%s')
          echo "Latest commit hash: $commit_hash"
          echo "Latest commit message: $commit_message"
          echo "COMMIT_HASH=$commit_hash" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$commit_message" >> $GITHUB_ENV

      - name: Link commit to issue with commit details
        run: |
          # Get issue and commit urls 
          issue_url="https://github.com/${{ github.repository }}/issues/${{ env.BRANCH_ISSUE_NUMBER }}"
          commit_url="https://github.com/${{ github.repository }}/commit/${{ env.COMMIT_HASH }}"
          
          # Create the comment body with the commit link and message
          comment_body="The commit was made.\nMessage: **${{ env.COMMIT_MESSAGE }}**. [View](${commit_url})."
          
          # Use GitHub API to add the comment to the issue
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\": \"$comment_body\"}" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ env.BRANCH_ISSUE_NUMBER }}/comments
